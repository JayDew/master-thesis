import matplotlib.pyplot as plt
import numpy as np

OPT_X = [1]
OPT_Y = [0]
plt.scatter(OPT_X, OPT_Y, color='orange', marker='*', s=500, label='optimal solution')  # plot optimal solution as a star
# Generate a range of x values
x = np.linspace(0, 1, 400)
# Compute the corresponding y values
y = -x + 1
plt.plot(x, y, label='Ax = b')

alpha = 0.1

pgd = [(0.5499999999999999, 0.44999999999999996), (0.6, 0.39999999999999997), (0.65, 0.35), (0.7, 0.29999999999999993), (0.75, 0.24999999999999994), (0.8, 0.1999999999999999), (0.8500000000000001, 0.14999999999999986), (0.9000000000000001, 0.09999999999999981), (0.9500000000000002, 0.04999999999999977), (1.0000000000000002, 0.0), (1.05, 0.0), (1.075, 0.0), (1.0875, 0.0), (1.09375, 0.0), (1.0968749999999998, 0.0), (1.0984374999999997, 0.0), (1.09921875, 0.0), (1.099609375, 0.0), (1.0998046874999998, 0.0), (1.0999023437499997, 0.0), (1.099951171875, 0.0), (1.0999755859375, 0.0), (1.0999877929687498, 0.0), (1.0999938964843747, 0.0)]
apgd = [(0.5499999999999998, 0.44999999999999984), (0.575, 0.42499999999999993), (0.625, 0.37499999999999994), (0.6875, 0.31249999999999994), (0.7625, 0.23749999999999988), (0.8500000000000001, 0.1499999999999999), (0.9500000000000001, 0.04999999999999982), (1.0625, 0.0), (1.1354166666666665, 0.0), (1.1432291666666665, 0.0), (1.1244554924242423, 0.0), (1.105187618371212, 0.0), (1.095183088395979, 0.0), (1.0936611931362907, 0.0), (1.09622183846427, 0.0), (1.0991511813966264, 0.0), (1.1007817907292834, 0.0), (1.1010703159199156, 0.0), (1.1006566422507502, 0.0), (1.1001525098159797, 0.0), (1.099860198150231, 0.0), (1.0998038735830875, 0.0), (1.0998774478493074, 0.0), (1.0999709126661248, 0.0), (1.1000265808524619, 0.0), (1.1000379128932645, 0.0), (1.100023992909211, 0.0), (1.10000578217601, 0.0), (1.0999947276558804, 0.0), (1.0999923892938819, 0.0)]

selected = apgd
x = [x[0] for x in selected]
y = [x[1] for x in selected]

plt.scatter(x, y, linestyle='-', color='C2', label=r'PGD')

# show the final plot
ax = plt.subplot(111)
ax.set_xlabel(r'$x_1$')
ax.set_ylabel(r'$x_2$')
ax.set_title(fr'Convergence pattern for PGD with $\alpha={0.1}$')
ax.legend()
ax.grid('on')
plt.show()
