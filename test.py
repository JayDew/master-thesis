# Define a function using lambda
import numpy as np
from matplotlib import pyplot as plt

stock = lambda A, amp, angle, phase: A * angle + amp * np.sin(angle + phase)

# Define parameters
# aPGD with beta = 2 for N=10
y = [7.754644672645877, 7.581222642419328, 7.321089597079503, 6.974245536626403, 6.54069046106003, 6.020424370380385, 5.4134472645874645, 4.719759143681268, 3.939360007661799, 3.0722498565290537, 2.1983782702361636, 1.545072315072188, 1.0051181909186124, 0.5973225129778323, 0.3540002760303224, 0.26337641202738776, 0.24708911179028192, 0.288934741438542, 0.3440145146571548, 0.3777249617926219, 0.37883460110432593, 0.3445751238939419, 0.29084366549227014, 0.25976180705718405, 0.23889925176004764, 0.2237650015368703, 0.2088123009442214, 0.21471711799908386, 0.21648267221594278, 0.21864710427994785, 0.21085359906024123, 0.19416531169925155, 0.17731123450329575, 0.16704259656548467, 0.15978064833684638, 0.15423050732276786, 0.15074616151970638, 0.14859101274468425, 0.1460379489469162, 0.14188359395806002, 0.13582593746022123, 0.13195574517791764, 0.1278874754205391, 0.12288961829960623, 0.11621313993659275, 0.10822140082096114, 0.09945952646083901, 0.09041600944980503, 0.0813862314866385, 0.07243169796666807, 0.06340010465450188, 0.05407484650709309, 0.044356039306907215, 0.03406083042899453, 0.023139215532811702, 0.011615753171475403, -0.00044177454351206297, -0.007072469585488952, 0.0046977779652115975, 0.006391342418431758, 0.007412367118712448, 0.0081451183675933, 0.008719206947863455, 0.02103585946726524, 0.032759655276203545, 0.038566988461906614, 0.03657445651647259, 0.026401882095692594, 0.008106647170845712, -0.0058765146245563825, -0.016920055863036874, -0.025622693628118837, -0.03135229483272597, -0.03319601919172903, -0.03194713430166283, -0.029046623023140986, -0.025584905566349167, -0.022185310746163946, -0.019188354686119038, -0.016934573955336287, -0.015037065092494844, -0.013547975167193792, -0.012226448899892956, -0.01092515916526297, -0.009603214365809529, -0.00838275420518873, -0.007391114487635602, -0.00670728738437871, -0.006354699073840606, -0.006295435755035989, -0.006442689929615043, -0.006684463169474159, -0.0069101682304157095, -0.007032948153625953, -0.007003289964532622, -0.006812680227149811, -0.006488674521664557, -0.006084317827639379, -0.0056652894471245635, -0.005297700499121586, -0.005038528319986849, -0.00492960443248402, -0.004995156676117599, -0.005242288746217954, -0.005663491846338158, -0.006240269625947762, -0.006947121201235973, -0.007755362556307176, -0.008636488813299445, -0.00956493895324882, -0.01052020861130982, -0.011488283129348333, -0.01246236452832274, -0.013442874091149234, -0.014436746016774657, -0.015456088993798488, -0.01651636820860173, -0.01763432871943832, -0.018825921270906074, -0.020104490195309566, -0.021479438172400212, -0.02295550349222427, -0.024532688806387103, -0.02620678530322566, -0.023645477015583182, -0.018965045777061075, -0.01364434355027869, -0.008510021311188444, -0.005364019049953947, -0.004379207339373049, -0.005412592533726806, -0.008071323544753383, -0.011805627940762486, -0.01600758696512339, -0.019722527462162756, -0.022616208003127535, -0.024817314198177096, -0.026579408237679188, -0.027732541984974546, -0.028217002433401576, -0.028191929911474217, -0.027876982357113226, -0.027443777908515824, -0.02697700594106554, -0.02649008008570064, -0.025966059221482585, -0.025397266069981814, -0.024808080521185417, -0.024257240325400307, -0.02382436093594389, -0.023589119273405824, -0.023611401250490664, -0.0239182127564966, -0.024499809850264655, -0.025314461974905958, -0.026299201097894114, -0.02521274676284575, -0.02349859404086745, -0.02179494563930651, -0.020225102213409726, -0.018844807110651854, -0.017665134508707242, -0.016640642503434593, -0.015703573003556456, -0.015396465430653218, -0.015669580683125062, -0.016401030775358184, -0.017336503298252762, -0.018291156606303146, -0.019219735353376604, -0.02015003359412462, -0.021114000004167747, -0.022110695223853928, -0.023097958349074316, -0.024015671712938884, -0.024812865097538266, -0.025457324365913327, -0.02593554554127259, -0.026247312580848458, -0.02639941820801258, -0.026401218058606478, -0.0262626641937628, -0.02599420352469865, -0.025607571001002097, -0.025116707590246288, -0.024538387012617194, -0.023892406494821126, -0.023201333494797464, -0.02248453748681514, -0.021750787275056555, -0.021058591867601277, -0.02043464209713619, -0.019902789866005164, -0.019483187465997778, -0.0191910493235213, -0.019035437938848144, -0.01901849703812299, -0.019135377540717174, -0.019374861664553645, -0.019720502957749547, -0.020152020320963145, -0.020646706729124605, -0.02118069673889555, -0.021730032302409483, -0.022271538720161414, -0.02278107788161809, -0.023236380446276527, -0.023622546647080925, -0.023930820467739315, -0.02415690721092488, -0.02429959125516771, -0.024359894999784845, -0.024340679486733026, -0.024246477216017748, -0.02408339417876175, -0.02385901170740674, -0.02358228226666394, -0.023263424283173673, -0.02291379822758675, -0.022545721714442645, -0.02215677722979311, -0.021780152164476634, -0.02143064985793413, -0.021121632365132297, -0.02086506393085288, -0.02067078680374008, -0.020545718035026174, -0.020493236196058154, -0.020512938371710632, -0.020600808602540578, -0.020749719502442514, -0.020950127299796298, -0.02119081981581962, -0.021459616361877293, -0.021743970875752208, -0.022031473312477592, -0.022310269041791377, -0.022569081683979503, -0.02279605842564494, -0.022983404178848504, -0.023126850368163265, -0.02322474944763327, -0.023277260809648655, -0.023285813905748763, -0.023252825524803043, -0.0231815630438561, -0.023076056800592534, -0.022941014657011947, -0.022781732879735398, -0.022604010450357873, -0.022410430818398098, -0.022207183127466255, -0.022007936713810808, -0.02182016810561211, -0.021651089390765488, -0.021507380945814437, -0.021394734845123557, -0.02131736358241777, -0.021277629043618726, -0.021275884871679897]
x = np.arange(len(y))  # x-axis

# Create main container with size of 6x5
fig = plt.figure(figsize=(6, 5))
# plt.subplots_adjust(bottom=0., left=0, top=1., right=1)

# Create first axes, the top-left plot with green plot
sub1 = fig.add_subplot(2, 2, 1)  # two rows, two columns, fist cell
sub1.plot(x, y, color='blue')
sub1.set_xlim(15, 50)
sub1.set_ylim(0, .4)
sub1.set_ylabel(r'$ \frac{|f(x_k) - f^{*}|}{|f^{*}}$', labelpad=15)


# Create second axes, a combination of third and fourth cell
sub2 = fig.add_subplot(2,2,2) # two rows, two columns, second cell
sub2.plot(x, y, color='blue')
sub2.set_xlim(80, 110)
sub2.set_ylim(-.01, 0)
# sub2.set_ylabel(r'$ \frac{|f(x_k) - f^{*}|}{|f^{*}}$', labelpad=15)

# Create third axes, a combination of third and fourth cell
sub3 = fig.add_subplot(2, 2, (3, 4))  # two rows, two colums, combined third and fourth cell
sub3.plot(x, y, color='blue', alpha=.7)
sub3.set_xlim(0, 150)
sub3.set_ylim(0, 7.5)
sub3.set_xlabel(r'k-th iteration', labelpad=15)
sub3.set_ylabel(r'$ \frac{|f(x_k) - f^{*}|}{|f^{*}}$', labelpad=15)

# Create blocked area in third axes
sub3.fill_between((15, 50), 0, 13, facecolor='blue', alpha=0.2)  # blocked area for first axes
sub3.fill_between((80, 110), 0, 13, facecolor='blue', alpha=0.2)  # blocked area for first axes

# # Create left side of Connection patch for first axes
# con1 = ConnectionPatch(xyA=(50, .0), coordsA=sub1.transData,
#                        xyB=(50, .3), coordsB=sub3.transData, color='blue')
# # Add left side to the figure
# fig.add_artist(con1)
#
# # Create right side of Connection patch for first axes
# con2 = ConnectionPatch(xyA=(20, .0), coordsA=sub1.transData,
#                        xyB=(20, .2), coordsB=sub3.transData, color='blue')
# # Add right side to the figure
# fig.add_artist(con2)

# Save figure with nice margin
plt.savefig('zoom_effect_2.png', dpi=300, bbox_inches='tight', pad_inches=.1)
